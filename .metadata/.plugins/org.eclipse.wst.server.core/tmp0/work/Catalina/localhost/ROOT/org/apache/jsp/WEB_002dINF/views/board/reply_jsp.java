/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.43
 * Generated at: 2021-04-28 04:00:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class reply_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/example/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/springSite/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1619581655143L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<meta charset=\"UTF-8\" />\r\n");
      out.write("\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no\"/>\r\n");
      out.write("\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\r\n");
      out.write("\t\t<title>댓글</title>\r\n");
      out.write("\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/resources/include/css/reply.css\" />\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- jQuery Framework 참조하기 -->\r\n");
      out.write("\t\t<script type=\"text/javascript\" src=\"/resources/include/js/jquery-1.12.4.min.js\"></script>\r\n");
      out.write("\t\t<script type=\"text/javascript\" src=\"/resources/include/js/common.js\"></script>\r\n");
      out.write("\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\tvar replyNum, message = \"작성시 입력한 비밀번호를 입력해 주세요.\", pwdConfirm=0, btnKind=\"\";\r\n");
      out.write("\t\t$(function() {\r\n");
      out.write("\t\t\t/** 기본 덧글 목록 불러오기 */\r\n");
      out.write("\t\t\tvar b_num = \"");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write("\";\r\n");
      out.write("\t\t\tlistAll(b_num)\r\n");
      out.write("\r\n");
      out.write("\t\t\t/** 덧글 내용 저장 이벤트 */\r\n");
      out.write("\t\t\t$(\"#replyInsert\").click(function() {\r\n");
      out.write("\t\t\t\t// 작성자 이름에 대한 입력여부 검사\r\n");
      out.write("\t\t\t\tif (!chkData(\"#r_name\",\"이름을\"))\treturn;\r\n");
      out.write("\t\t\t\telse if (!chkData(\"#r_pwd\",\"비밀번호를\"))\treturn;\r\n");
      out.write("\t\t\t\telse if (!chkData(\"#r_content\",\"내용을\"))\treturn;\r\n");
      out.write("\t\t\t\telse{\r\n");
      out.write("\t\t\t\t\tvar insertUrl = \"/replies/replyInsert.do\";\r\n");
      out.write("\t\t\t\t\t/** 글 저장을 위한 Post 방식의 Ajax 연동 처리 */\r\n");
      out.write("\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\t\turl : insertUrl,  //전송 url\r\n");
      out.write("\t\t\t\t\t\ttype : \"post\",    // 전송 시 method 방식\r\n");
      out.write("\t\t\t\t\t\theaders : {\r\n");
      out.write("\t\t\t\t\t\t\t\"Content-Type\":\"application/json\",\r\n");
      out.write("\t\t\t\t\t\t\t\"X-HTTP-Method-Override\":\"POST\"\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\tdataType:\"text\",\r\n");
      out.write("\t\t\t\t\t\tdata : JSON.stringify({\r\n");
      out.write("\t\t\t\t\t\t\tb_num:b_num,\r\n");
      out.write("\t\t\t\t\t\t\tr_name:$(\"#r_name\").val(),\r\n");
      out.write("\t\t\t\t\t\t\tr_pwd:$(\"#r_pwd\").val(),\r\n");
      out.write("\t\t\t\t\t\t\tr_content:$(\"#r_content\").val()\r\n");
      out.write("\t\t\t\t\t\t}),\r\n");
      out.write("\t\t\t\t\t\terror : function(){ \r\n");
      out.write("\t\t\t\t\t             alert('시스템 오류 입니다. 관리자에게 문의 하세요');\r\n");
      out.write("\t\t\t\t\t\t}, \r\n");
      out.write("\t\t\t\t\t\tsuccess : function(resultData){ \r\n");
      out.write("\t\t\t\t\t\t\tif(resultData==\"SUCCESS\"){\r\n");
      out.write("\t\t\t\t\t\t\t    alert(\"댓글 등록이 완료되었습니다.\");\r\n");
      out.write("\t\t\t\t\t\t\t    dataReset();\r\n");
      out.write("\t\t\t\t\t\t\t    listAll(b_num);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t/** 수정버튼 클릭시 수정폼 출력 */\r\n");
      out.write("\t\t\t$(document).on(\"click\", \".update_form\", function() {\r\n");
      out.write("\t\t\t\t$(\".reset_btn\").click();\r\n");
      out.write("\t\t\t\tvar currLi = $(this).parents(\"li\");\r\n");
      out.write("\t\t\t\tif(pwdConfirm==0){\r\n");
      out.write("\t\t\t\t\treplyNum = currLi.attr(\"data-num\");\r\n");
      out.write("\t\t\t\t\tbtnKind=\"upBtn\";\r\n");
      out.write("\t\t\t\t\tpwdView(currLi);\r\n");
      out.write("\t\t\t\t}else if(pwdConfirm==1){\r\n");
      out.write("\t\t\t\t \tvar conText = currLi.children().eq(1).html();\r\n");
      out.write("\t\t\t\t\t//console.log(\"conText: \" + conText);\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tcurrLi.find(\"input[type='button']\").hide();\r\n");
      out.write("\t\t\t\t\tvar conArea = currLi.children().eq(1);\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tconArea.html(\"\");\r\n");
      out.write("\t\t\t\t\tvar data=\"<textarea name='content' id='content'>\"+ conText+\"</textarea>\";\r\n");
      out.write("\t\t\t\t\tdata+=\"<input type='button' class='update_btn' value='수정완료'>\";\r\n");
      out.write("\t\t\t\t\tdata+=\"<input type='button' class='reset_btn' value='수정취소'>\";\r\n");
      out.write("\t\t\t\t\tconArea.html(data);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t/** 초기화 버튼 */\r\n");
      out.write("\t\t\t$(document).on(\"click\", \".reset_btn\", function() {\r\n");
      out.write("\t\t\t\tpwdConfirm = 0;\r\n");
      out.write("\t\t\t\tbtnKind=\"\";\r\n");
      out.write("\t\t\t\tvar conText = $(this).parents(\"li\").find(\"textarea\").html();\r\n");
      out.write("\t\t\t\t$(this).parents(\"li\").find(\"input[type='button']\").show();\r\n");
      out.write("\t\t\t\tvar conArea = $(this).parents(\"li\").children().eq(1);\r\n");
      out.write("\t\t\t\tconArea.html(conText);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t/** 글 수정을 위한  Ajax 연동 처리 */\r\n");
      out.write("\t\t\t$(document).on(\"click\", \".update_btn\", function() {\r\n");
      out.write("\t\t\t\tvar r_num = $(this).parents(\"li\").attr(\"data-num\");\r\n");
      out.write("\t\t\t\tvar r_content = $(\"#content\").val();\r\n");
      out.write("\t\t\t\tif (!chkData(\"#content\",\"댓글 내용을\"))\treturn;\r\n");
      out.write("\t\t\t\telse {\t\r\n");
      out.write("\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\t\turl:'/replies/'+r_num+\".do\",\r\n");
      out.write("\t\t\t\t\t\ttype:'put',\r\n");
      out.write("\t\t\t\t\t\theaders: { \r\n");
      out.write("\t\t\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n");
      out.write("\t\t\t\t\t\t\t\"X-HTTP-Method-Override\": \"PUT\" },\r\n");
      out.write("\t\t\t\t\t\tdata:JSON.stringify({\r\n");
      out.write("\t\t\t\t\t\t\tr_content:r_content}), \r\n");
      out.write("\t\t\t\t\t\tdataType:'text', \r\n");
      out.write("\t\t\t\t\t\tsuccess:function(result){\r\n");
      out.write("\t\t\t\t\t\t\tconsole.log(\"result: \" + result);\r\n");
      out.write("\t\t\t\t\t\t\tif(result == 'SUCCESS'){\r\n");
      out.write("\t\t\t\t\t\t\t\talert(\"수정 되었습니다.\");\r\n");
      out.write("\t\t\t\t\t\t\t\tlistAll(b_num);\r\n");
      out.write("\t\t\t\t\t\t\t\tpwdConfirm=0;\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}); \r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t/** 글 삭제를 위한  Ajax 연동 처리 */\r\n");
      out.write("\t\t\t$(document).on(\"click\", \".delete_btn\", function() {\r\n");
      out.write("\t\t\t\t$(\".reset_btn\").click();\r\n");
      out.write("\t\t\t\tvar currLi = $(this).parents(\"li\")\r\n");
      out.write("\t\t\t\treplyNum = currLi.attr(\"data-num\");\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(pwdConfirm==0){\r\n");
      out.write("\t\t\t\t\tpwdView(currLi);\r\n");
      out.write("\t\t\t\t\tbtnKind=\"delBtn\";\r\n");
      out.write("\t\t\t\t}else if(pwdConfirm==1){\r\n");
      out.write("\t\t\t\t\tif (confirm(\"선택하신 댓글을 삭제하시겠습니까?\")) {\r\n");
      out.write("\t\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\t\t\ttype : 'delete',\r\n");
      out.write("\t\t\t\t\t\t\turl : '/replies/' + replyNum+\".do\",\r\n");
      out.write("\t\t\t\t\t\t\theaders : {\r\n");
      out.write("\t\t\t\t\t\t\t   \"Content-Type\" : \"application/json\",\r\n");
      out.write("\t\t\t\t\t\t\t   \"X-HTTP-Method-Override\" : \"DELETE\"\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\tdataType : 'text',\r\n");
      out.write("\t\t\t\t\t\t\tsuccess : function(result) {\r\n");
      out.write("\t\t\t\t\t\t\t\tconsole.log(\"result: \" + result);\r\n");
      out.write("\t\t\t\t\t\t\t\tif (result == 'SUCCESS') {\r\n");
      out.write("\t\t\t\t\t\t\t\t      alert(\"삭제 되었습니다.\");\r\n");
      out.write("\t\t\t\t\t\t\t\t      listAll(b_num);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t} else{\r\n");
      out.write("\t\t\t\t\t\tpwdConfirm=0;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t/* 비밀번호 취소 버튼 클릭 시 처리 이벤트 */\r\n");
      out.write("\t\t\t$(document).on(\"click\", \".pwdResetBut\", function() {\r\n");
      out.write("\t\t\t\t//$(this).parents(\"li\").removeClass(\"glayLayer\");\r\n");
      out.write("\t\t\t\t//$(this).parent().parent().removeClass(\"overLayer\");\r\n");
      out.write("\t\t\t\t$(this).parent().parent().html(\"\");\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(document).on(\"focus\", \".passwd\", function() {\r\n");
      out.write("\t\t\t\t$(this).val(\"\");\r\n");
      out.write("\t\t\t\tvar span= $(this).parents(\"form\").find(\"span\");\r\n");
      out.write("\t\t\t\tspan.removeClass(\"msg_error\");\r\n");
      out.write("\t\t\t\tspan.addClass(\"msg_default\");\r\n");
      out.write("\t\t\t\tspan.html(message);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t/* 비밀번호 확인 버튼 클릭 시 처리 이벤트 */\r\n");
      out.write("\t\t\t$(document).on(\"click\", \".pwdCheckBut\", function() {\r\n");
      out.write("\t\t\t\tvar form = $(this).parents(\"form\");\r\n");
      out.write("\t\t\t\tvar pwd = form.find(\".passwd\");\r\n");
      out.write("\t\t\t\tvar r_msg = form.find(\".r_msg\");\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar up = $(this).parents(\"li\").find(\".update_form\");\r\n");
      out.write("\t\t\t\tvar del = $(this).parents(\"li\").find(\".delete_btn\");\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif (!formCheck(pwd, r_msg, \"비밀번호를\"))\treturn;\r\n");
      out.write("\t\t\t\telse {\t\r\n");
      out.write("\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\t\turl : \"/replies/pwdConfirm.do\",  \r\n");
      out.write("\t\t\t\t\t\ttype : \"POST\", \r\n");
      out.write("\t\t\t\t\t\tdata : \"r_num=\"+replyNum+\"&r_pwd=\"+pwd.val(),\r\n");
      out.write("\t\t\t\t\t\tdataType : \"text\",\r\n");
      out.write("\t\t\t\t\t\terror : function(){ \r\n");
      out.write("\t\t\t\t\t\t\talert('시스템 오류 입니다. 관리자에게 문의 하세요');\r\n");
      out.write("\t\t\t\t\t\t}, \r\n");
      out.write("\t\t\t\t\t\tsuccess : function(resultData){ \r\n");
      out.write("\t\t\t\t\t\t\tif(resultData==0){ // 일치하지 않는 경우\r\n");
      out.write("\t\t\t\t\t\t\t\tr_msg.addClass(\"msg_error\");\r\n");
      out.write("\t\t\t\t\t\t\t\tr_msg.text(\"입력한 비밀번호가 일치하지 않습니다.\");\r\n");
      out.write("\t\t\t\t\t\t\t}else if(resultData==1){ // 일치할 경우\r\n");
      out.write("\t\t\t\t\t\t\t        pwdConfirm=resultData;\r\n");
      out.write("\t\t\t\t\t\t\t\t$(\".pwdResetBut\").click();\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\tif(btnKind==\"upBtn\"){\r\n");
      out.write("\t\t\t\t\t\t\t\t\tup.click();\r\n");
      out.write("\t\t\t\t\t\t\t\t}else if(btnKind==\"delBtn\"){\r\n");
      out.write("\t\t\t\t\t\t\t\t\tdel.click();\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\tbtnKind=\"\";\r\n");
      out.write("\t\t\t\t\t\t\t\tpwdConfirm=0;\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}); \r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tfunction pwdView(area){\r\n");
      out.write("\t\t\t$(\".pwdResetBut\").click();\r\n");
      out.write("\t\t\tvar pwd_div = $(\"<div>\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar data=\"<form name='f_pwd'>\"\r\n");
      out.write("\t\t\tdata+=\"<label for='passwd'>비밀번호 : </label>\";\r\n");
      out.write("\t\t\tdata+=\"<input type='password' name='passwd' class='passwd'/> \";\r\n");
      out.write("\t\t\tdata+=\"<input type='button' class='pwdCheckBut' value='확인' />\";\r\n");
      out.write("\t\t\tdata+=\"<input type='button' class='pwdResetBut' value='취소' />\";\r\n");
      out.write("\t\t\tdata+=\"<span class='r_msg msg_default'>\"+message+\"</span></form>\";\r\n");
      out.write("\t\t\tpwd_div.html(data);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tarea.append(pwd_div);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 리스트 요청 함수\r\n");
      out.write("\t\tfunction listAll(b_num){\r\n");
      out.write("\t\t\t$(\"#comment_list\").html(\"\");\r\n");
      out.write("\t\t\tvar url = \"/replies/all/\"+b_num+\".do\";\r\n");
      out.write("\t\t\t$.getJSON(url, function(data) {\r\n");
      out.write("\t\t\t\tconsole.log(data.length);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write(" \t\t\t\t$(data).each(function() {\r\n");
      out.write("\t\t\t\t\tvar r_num = this.r_num;\r\n");
      out.write("\t\t\t\t\tvar r_name = this.r_name;\r\n");
      out.write("\t\t\t\t\tvar r_content = this.r_content;\r\n");
      out.write("\t\t\t\t\tvar r_date = this.r_date;\r\n");
      out.write("\t\t\t\t\taddNewItem(r_num, r_name, r_content, r_date);\r\n");
      out.write("\t\t\t\t}); \r\n");
      out.write("\t\t\t}).fail(function() {\r\n");
      out.write("\t\t\t\talert(\"덧글 목록을 불러오는데 실패하였습니다. 잠시후에 다시 시도해 주세요.\");\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/** 새로운 글을 화면에 추가하기 위한 함수*/\r\n");
      out.write("\t\tfunction addNewItem(r_num, r_name, r_content, r_date) {\r\n");
      out.write("\t\t\t// 새로운 글이 추가될 li태그 객체\r\n");
      out.write("\t\t\tvar new_li = $(\"<li>\");\r\n");
      out.write("\t\t\tnew_li.attr(\"data-num\", r_num);\r\n");
      out.write("\t\t\tnew_li.addClass(\"comment_item\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 작성자 정보가 지정될 <p>태그\r\n");
      out.write("\t\t\tvar writer_p = $(\"<p>\");\r\n");
      out.write("\t\t\twriter_p.addClass(\"writer\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 작성자 정보의 이름\r\n");
      out.write("\t\t\tvar name_span = $(\"<span>\");\r\n");
      out.write("\t\t\tname_span.addClass(\"name\");\r\n");
      out.write("\t\t\tname_span.html(r_name + \"님\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 작성일시\r\n");
      out.write("\t\t\tvar date_span = $(\"<span>\");\r\n");
      out.write("\t\t\tdate_span.html(\" / \" + r_date + \" \");\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 수정하기 버튼\r\n");
      out.write("\t\t\tvar up_input = $(\"<input>\");\r\n");
      out.write("\t\t\tup_input.attr({\"type\" : \"button\", \"value\" : \"수정하기\"});\r\n");
      out.write("\t\t\tup_input.addClass(\"update_form\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 삭제하기 버튼\r\n");
      out.write("\t\t\tvar del_input = $(\"<input>\");\r\n");
      out.write("\t\t\tdel_input.attr({\"type\" : \"button\", \"value\" : \"삭제하기\"});\r\n");
      out.write("\t\t\tdel_input.addClass(\"delete_btn\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 내용\r\n");
      out.write("\t\t\tvar content_p = $(\"<p>\");\r\n");
      out.write("\t\t\tcontent_p.addClass(\"con\");\r\n");
      out.write("\t\t\tcontent_p.html(r_content);\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 조립하기\r\n");
      out.write("\t\t\twriter_p.append(name_span).append(date_span).append(up_input).append(del_input)\r\n");
      out.write("\t\t\tnew_li.append(writer_p).append(content_p);\r\n");
      out.write("\t\t\t$(\"#comment_list\").append(new_li);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction dataReset() {\r\n");
      out.write("\t\t\t$(\"#r_name\").val(\"\");\r\n");
      out.write("\t\t\t$(\"#r_pwd\").val(\"\");\r\n");
      out.write("\t\t\t$(\"#r_content\").val(\"\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\t<div id=\"replyContainer\">\r\n");
      out.write("\t\t\t<h1></h1>\r\n");
      out.write("\t\t\t<div id=\"comment_write\">\r\n");
      out.write("\t\t\t\t<form id=\"comment_form\">\r\n");
      out.write("\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t<label for=\"r_name\">작성자</label>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" name=\"r_name\" id=\"r_name\" />\r\n");
      out.write("\t\t\t\t\t\t<label for=\"r_pwd\">비밀번호</label>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"password\" name=\"r_pwd\" id=\"r_pwd\" />\r\n");
      out.write("\t\t\t\t\t\t<input type=\"button\" id=\"replyInsert\" value=\"저장하기\" />\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t<label for=\"r_content\">덧글내용</label>\r\n");
      out.write("\t\t\t\t\t\t<textarea name=\"r_content\" id=\"r_content\"></textarea>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<ul id=\"comment_list\">\r\n");
      out.write("\t\t\t\t<!-- 여기에 동적 생성 요소가 들어가게 됩니다. -->\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f0_reused = false;
    try {
      _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f0.setParent(null);
      // /WEB-INF/views/board/reply.jsp(21,16) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${detail.b_num}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
      if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      _jspx_th_c_005fout_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f0_reused);
    }
    return false;
  }
}
